(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{492:function(s,a,n){"use strict";n.r(a);var t=n(2),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"配好环境-选择一种最适合你的go安装方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配好环境-选择一种最适合你的go安装方法"}},[s._v("#")]),s._v(" 配好环境：选择一种最适合你的Go安装方法")]),s._v(" "),a("p",[s._v("编程不是“纸上谈兵”，它是一门实践的艺术。编程语言的学习离不开动手实践，因此学习任何一门编程语言的第一步都是要拥有一个这门编程语言的开发环境，这样我们才可以动手编码，理论与实践结合，不仅加速学习效率，还能取得更好的学习效果。")]),s._v(" "),a("p",[s._v("在这一讲中我们就先来学习下如何安装和配置 Go 语言开发环境。如果你的机器上还没有 Go，那么就请跟我一起选择一种适合你的 Go 安装方法吧。第一步，先来挑一个合适的 Go 版本。")]),s._v(" "),a("h2",{attrs:{id:"选择-go-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择-go-版本"}},[s._v("#")]),s._v(" 选择 Go 版本")]),s._v(" "),a("p",[s._v("挑版本之前，我们先来看看 Go 语言的"),a("strong",[s._v("版本发布策略")]),s._v("。")]),s._v(" "),a("p",[s._v("如今，Go 团队已经将版本发布节奏稳定在每年发布两次大版本上，一般是在二月份和八月份发布。Go 团队承诺对最新的两个 Go 稳定大版本提供支持，比如目前最新的大版本是 Go 1.18，那么 Go 团队就会为 Go 1.18 和 Go 1.167版本提供支持。如果 Go 1.19 版本发布，那支持的版本将变成 Go 1.19 和 Go 1.18。支持的范围主要包括修复版本中存在的重大问题、文档变更以及安全问题更新等。")]),s._v(" "),a("p",[s._v("基于这样的版本发布策略，在你选择版本时可以参考这几种思路：")]),s._v(" "),a("p",[s._v("一般情况下，我建议你采用最新版本。因为 Go 团队发布的 Go 语言稳定版本的平均质量一直是很高的，少有影响使用的重大 bug。你也不用太担心新版本的支持问题，Google 的自有产品，比如 Google App Engine（以下简称为 GAE）支持都会很快，一般在 Go 新版本发布不久后，GAE 便会宣布支持最新版本的 Go。")]),s._v(" "),a("p",[s._v("你还可以根据不同实际项目需要或开源社区的情况使用不同的版本。")]),s._v(" "),a("p",[s._v("有的开源项目采纳了 Go 团队的建议，在 Go 最新版本发布不久就将当前项目的 Go 编译器版本升级到最新版，比如 Kubernetes 项目；而有的开源项目（比如：docker 项目）则比较谨慎，在 Go 团队发布 Go 1.17 版本之后，这些项目可能还在使用两个发布周期之前的版本，比如 Go 1.15。")]),s._v(" "),a("p",[s._v("但多数项目处于两者之间，也就是使用次新版，即最新版本之前的那个版本。比如，当前最新版本为 Go 1.18，那么这些项目会使用 Go 1.17 版本的最新补丁版本（Go 1.17.x），直到发布 Go 1.19 后，这些项目才会切换到 Go 1.18的最新补丁版本（Go 1.18.x）。如果你不是那么“激进”，也可以采用这种版本选择策略。")]),s._v(" "),a("p",[a("strong",[s._v("建议你直接使用 Go 最新发布版")]),s._v("，这样我们可以体验到 Go 的最新语言特性，应用到标准库的最新 API 以及 Go 工具链的最新功能。")]),s._v(" "),a("p",[s._v("选定 Go 版本后，接下来我们就来看看几种常见的 Go 安装方法。")]),s._v(" "),a("h2",{attrs:{id:"安装-go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-go"}},[s._v("#")]),s._v(" 安装 Go")]),s._v(" "),a("p",[s._v("Go 从 2009 年开源并演化到今天，它的安装方法其实都已经很成熟了，接下来呢，我们就逐一介绍在 Linux、macOS这两大主流操作系统上安装 Go 的方法，对于Windows平台则跳过了。")]),s._v(" "),a("hr"),s._v(" "),a("p",[a("strong",[a("font",{attrs:{size:"4.5"}},[s._v("温馨提示")])],1)]),s._v(" "),a("p",[s._v("虽然 Go 官方下载站点是 "),a("code",[s._v("golang.org/dl")]),s._v(" ，但我们可以用针对中国大陆的镜像站点 "),a("code",[s._v("golang.google.cn/dl")]),s._v(" 来下载，在中国大陆地区使用大陆镜像站点可以大幅缩短下载时间。")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("我们假设这些操作系统都安装在 X86-64 的平台上，首先我们来看 Linux。")]),s._v(" "),a("p",[a("strong",[a("font",{attrs:{size:"4.5"}},[s._v("在 Linux 上安装 Go")])],1)]),s._v(" "),a("p",[s._v("Go 几乎支持 Linux 所有的主流发行版操作系统，常见的包括 Ubuntu、CentOS（Redhat 企业版 Linux 的社区开源版）、Fedora、SUSE 等等，Go 在这些主流的 Linux 发行版操作系统上的安装方法都是一样的（当然某个发行版也可能会利用其软件安装管理器提供仅属于其自己的安装方法）。你可以参考下面这样的安装步骤。")]),s._v(" "),a("p",[s._v("首先，我们需要下载并解压 Go Linux 安装包：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" https://golang.google.cn/dl/go1.16.5.linux-amd64.tar.gz\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" /usr/local "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-xzf")]),s._v(" go1.16.5.linux-amd64.tar.gz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("执行完上面解压缩命令后，我们将在 /usr/local 下面看到名为 go 的目录，这个目录就是 Go 的安装目录，也是 Go 官方推荐的 Go 安装目录。我们执行下面命令可以查看该安装目录下的组成：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" /usr/local/go\nAUTHORS          CONTRIBUTORS  PATENTS    SECURITY.md  api/  doc/         lib/   pkg/        src/\nCONTRIBUTING.md  LICENSE       README.md  VERSION      bin/  favicon.ico  misc/  robots.txt  test/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("不过呢，为了可以在任意路径下使用 go 命令，我们需要将 Go 二进制文件所在路径加入到用户环境变量 PATH 中（以用户使用 bash 为例），具体操作是将下面这行环境变量设置语句添加到 "),a("code",[s._v("$HOME/.profile")]),s._v(" 文件的末尾，然后执行source命令使上述环境变量的设置立即生效。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ nvim  "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.profile\n---\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":/usr/local/go/bin\n---\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.profile\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("最后，我们可以通过下面命令验证此次安装是否成功。如果这个命令输出了“go version go1.16.5 linux/amd64”，那么说明我们这次的 Go 安装是成功的。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[a("font",{attrs:{size:"4.5"}},[s._v("在 macOS 上安装 Go")])],1)]),s._v(" "),a("p",[s._v("如果在macOS上安装过 Xcode 软件，可以安装包管理程序，在这里推荐使用 "),a("code",[s._v("brew")]),s._v(" 和 "),a("code",[s._v("macPort")]),s._v(" 。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Method.01"')]),s._v("\n$ brew "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" go\n\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Method.02"')]),s._v("\n～ "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# port install go")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("当然了，在 Mac 上，我们也可以采用像 Linux 那样的通过命令行安装 Go 的方法，如果采用这种方法，我们就要下载下面的 Mac Go 安装包：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" https://golang.google.cn/dl/go1.16.5.darwin-amd64.tar.gz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("后续的步骤与 Linux 上安装 Go 几乎没有差别，直接参考上面的就好了。")]),s._v(" "),a("p",[s._v("除此之外，在 Mac 上我们也可以在图形界面的引导下进行 Go 的安装。不过，我们先要下载适用于 Mac 的 Go 安装包：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" https://golang.google.cn/dl/go1.16.5.darwin-amd64.pkg\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("安装包下载完毕后，我们可以双击安装包，打开标准的 Mac 软件安装界面，按软件安装向导提示，一路点击“继续”，我们便可以完成 Go 在 Mac 上的安装。")]),s._v(" "),a("p",[s._v("和 Linux 一样，Mac 上的 Go 安装包默认也会将 Go 安装到 /usr/local/go 路径下面。因此，如果要在任意路径下使用 Go，我们也需将这个路径加入到用户的环境变量 PATH 中。具体操作方法与上面 Linux 中的步骤一样，也是将下面环境变量设置语句加入到 "),a("code",[s._v("$HOME/.profile")]),s._v(" 中，然后执行 source 命令让它生效就可以了：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ nvim  "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.profile\n---\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":/usr/local/go/bin\n---\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.profile\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("最后，我们同样可以通过 go version 命令验证一下这次安装是否成功。")]),s._v(" "),a("h2",{attrs:{id:"安装多个-go-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装多个-go-版本"}},[s._v("#")]),s._v(" 安装多个 Go 版本")]),s._v(" "),a("p",[s._v("一般来说，Go 初学者安装一个最新的 Go 版本就足够了，但随着 Go 编程的深入，我们通常会有使用多个 Go 版本的需求，比如一个版本用于学习或本地开发，另外一个版本用于生产构建等等。")]),s._v(" "),a("p",[s._v("安装多个 Go 版本其实也很简单，这里介绍三种方法。")]),s._v(" "),a("p",[a("strong",[a("font",{attrs:{size:"4.5"}},[s._v("方法一：重新设置 PATH 环境变量")])],1)]),s._v(" "),a("p",[s._v("你只需要将不同版本的 Go 安装在不同路径下，然后将它们的 Go 二进制文件的所在路径加入到 PATH 环境变量中就可以了。")]),s._v(" "),a("p",[s._v("我们以 Linux 环境为例，在前面介绍 Go 标准安装方法的时候，我们已经将 Go 1.16.5 版本安装到了 /usr/local/go 下面，也将 /usr/local/go/bin 这个路径加入到了 PATH 路径下了，当前状态我们在任意路径下敲入 go，执行的都是 Go 1.16.5 版本对应的 Go 二进制文件。")]),s._v(" "),a("p",[s._v("那这个时候，如果我们想再安装一个 Go 1.15.13 版本要怎么办呢？")]),s._v(" "),a("p",[s._v("首先，你需要按照标准步骤将 Go 1.15.13 安装到事先建好的 /usr/local/go1.15.13 路径下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /usr/local/go1.15.13\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" https://golang.google.cn/dl/go1.15.13.linux-amd64.tar.gz\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" /usr/local/go1.15.13 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-xzf")]),s._v(" go1.15.13.linux-amd64.tar.gz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("接下来，我们来设置 PATH 环境变量，修改原先 "),a("code",[s._v("$HOME/.profile")]),s._v(" 中的 PATH 变量的值即可：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":/usr/local/go/bin\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":/usr/local/go1.15.13/go/bin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("这样通过执行 source 命令重新使 PATH 环境变量生效后，我们再执行 go version 命令，会得到下面这样的结果：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go version\ngo version go1.15.13 linux/amd64\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这样，我们已经安装好两个 Go 版本了。这之后，我们如果要在 Go 1.16.5 和 Go 1.15.13 两个版本之间切换，只需要重新设置 PATH 环境变量并生效即可。")]),s._v(" "),a("p",[s._v("不过，你可能依然会觉得通过重新设置 PATH 环境变量的方法有些麻烦。没关系，Go 官方也提供了一种在系统中安装多个 Go 版本的方法，下面我们就来看一下第二种方法。")]),s._v(" "),a("p",[a("strong",[a("font",{attrs:{size:"4.5"}},[s._v("方法二：go get 命令")])],1)]),s._v(" "),a("p",[a("strong",[s._v("这种方法有一个前提，那就是当前系统中已经通过标准方法安装过某个版本的 Go 了。")])]),s._v(" "),a("p",[s._v("我们还以 Linux 环境为例，假设目前环境中已经存在了采用标准方法安装的 Go 1.16.5 版本，我们接下来想再安装一个 Go 1.15.13 版本。按照 Go 官方方法，我们可以这样来做：")]),s._v(" "),a("p",[s._v("首先，将 "),a("code",[s._v("$HOME/go/bin")]),s._v(" 加入到 PATH 环境变量中并生效，即便这个目录当前不存在也没关系：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":/usr/local/go/bin:~/go/bin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后，我们要执行下面这个命令安装 Go 1.15.13 版本的下载器：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go get golang.org/dl/go1.15.13\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个命令会将名为 Go 1.15.13 的可执行文件安装到 "),a("code",[s._v("$HOME/go/bin")]),s._v(" 这个目录下，它是 Go 1.15.13 版本的专用下载器，下面我们再来执行 Go 1.15.13 的下载安装命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go1.15.13 version\ngo version go1.15.13 linux/amd64\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("同样的，我们也可以通过下面这个命令查看特定 Go 版本的安装位置：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go1.15.13 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v(" GOROOT\n/root/sdk/go1.15.13\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[a("font",{attrs:{size:"4.5"}},[s._v("方法三：go get 命令安装非稳定版本")])],1)]),s._v(" "),a("p",[s._v("其实，除了 Go 团队正式发布的稳定版本 (stable version)，像前面安装的 Go 1.16.5 或 Go 1.15.13，我们还可以通过 go get 的方法安装 Go 团队正在开发的非稳定版本 (Unstable Version)，包括每个稳定版发布前的 beta 版本或当前最新的 tip 版本，这些非稳定版本可以让 Go 开发人员提前体验到即将加入到稳定版本中的新特性。")]),s._v(" "),a("p",[s._v("但是，通过 go get 安装不同 Go 版本的方法在中国大陆地区会因网络问题而失败。如果你已经克服了网络问题，那安装非稳定版本的步骤其实和上面的步骤一样。现在，我们以 Go 1.17beta1 和 Go Tip 版本为例，带你体验一下它们的安装步骤和验证方法。")]),s._v(" "),a("p",[s._v("首先我们来看 Go 1.17beta1：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go get golang.org/dl/go1.17beta1\n$ go1.17beta1 download\nDownloaded   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3272")]),s._v(" / "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("134470397")]),s._v(" bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nDownloaded  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21.4")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28819248")]),s._v(" / "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("134470397")]),s._v(" bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nDownloaded  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("58.1")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("78069168")]),s._v(" / "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("134470397")]),s._v(" bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nDownloaded "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100.0")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("134470397")]),s._v(" / "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("134470397")]),s._v(" bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nUnpacking /root/sdk/go1.17beta1/go1.17beta1.linux-amd64.tar.gz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nSuccess. You may now run "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'go1.17beta1'")]),s._v("\n$ go1.17beta1 version\ngo version go1.17beta1 linux/amd64\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("接着来看 Go Tip 版本：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go get golang.org/dl/gotip\n$ gotip download\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("go get 为我们安装 tip 版本提供了极大方便，要知道在以前，如果我们要安装 tip 版本，需要手工下载 Go 源码并自行编译。但你要注意的是：不是每次 gotip 安装都会成功，因为这毕竟是正在积极开发的版本，一次代码的提交就可能会导致 gotip 版本构建失败！")]),s._v(" "),a("p",[s._v("安装好 Go 之后，我们就该讲讲怎么配置了。")]),s._v(" "),a("h2",{attrs:{id:"配置-go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-go"}},[s._v("#")]),s._v(" 配置 Go")]),s._v(" "),a("p",[s._v("其实 Go 在安装后是开箱即用的，这也意味着我们在使用 Go 之前无需做任何配置。但为了更好地了解和学习 Go，我们还是要认识一些 Go 自带的常用配置项。Go 的配置项是以环境变量的形式存在的，我们可以通过下面这个命令查看 Go 的这些配置项：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[a("font",{attrs:{size:"4.5"}},[s._v("配置环境变量")])],1)]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Method.01")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GO111MODULE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GOPROXY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https://goproxy.cn\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Method.02")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GO111MODULE=on"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.profile\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GOPROXY=https://goproxy.cn"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.profile\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.profile\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Method.03")]),s._v("\nnvim ~/.zshrc\n---\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GO111MODULE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GOPROXY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https://goproxy.cn\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GOROOT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/Users/shizc/opt/local/go/1.17.2\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GOROOT")]),s._v("/bin\n---\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.zshrc\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("strong",[a("font",{attrs:{size:"4.5"}},[s._v("常用配置项")])],1)]),s._v(" "),a("ul",[a("li",[s._v("GOPATH\n"),a("ul",[a("li",[s._v("项目结构\n"),a("ul",[a("li",[s._v("src    存放源代码")]),s._v(" "),a("li",[s._v("pkg   存放依赖包")]),s._v(" "),a("li",[s._v("bin    存放可执行文件")])])]),s._v(" "),a("li",[s._v("配置要求\n"),a("ul",[a("li",[s._v("go_version <   1.8，必须设置这个环境变量；")]),s._v(" "),a("li",[s._v("go_version >= 1.8，如果没有设置，则使用默认值。")])])]),s._v(" "),a("li",[s._v("默认变量\n"),a("ul",[a("li",[s._v("Unix \t\t   默认为 "),a("font",{attrs:{color:"green"}},[s._v("$HOME/go")])],1),s._v(" "),a("li",[s._v("Windows    默认为 "),a("font",{attrs:{color:"green"}},[s._v("%USERPROFILE%/go")])],1),s._v(" "),a("li",[s._v("macOS        可以通过修改 "),a("font",{attrs:{color:"green"}},[s._v("~/.bash_profile")]),s._v(" 来设置")],1)])])])])]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"blogs/zh/md/dev/go/img/ba6990.png",alt:"ba6990"}}),s._v(" "),a("p",[s._v("如果你还要了解更多关于 Go 配置项的说明，你可以通过 "),a("code",[s._v("go help environment")]),s._v(" 命令查看。")])])}),[],!1,null,null,null);a.default=e.exports}}]);